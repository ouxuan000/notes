

1.简单说 page指当前页面。在一个jsp页面里有效
2.request 指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量。
3.Session 有效范围当前会话，从浏览器打开到浏览器关闭这个过程。
4.application它的有效范围是整个应用。
作用域里的变量，它们的存活时间是最长的，如果不进行手工删除，它们就一直可以使用






page里的变量没法从index.jsp传递到test.jsp。只要页面跳转了，它们就不见了。

request里的变量可以跨越forward前后的两页。但是只要刷新页面，它们就重新计算了。

session和application里的变量一直在累加，开始还看不出区别，只要关闭浏览器，再次重启浏览器访问这页，session里的变量就重新计算了。

application里的变量一直在累加，除非你重启tomcat，否则它会一直变大。

而作用域规定的是变量的有效期限。

如果把变量放到pageContext里，就说明它的作用域是page，它的有效范围只在当前jsp页面里。

从把变量放到pageContext开始，到jsp页面结束，你都可以使用这个变量。

如果把变量放到request里，就说明它的作用域是request，它的有效范围是当前请求周期。

所谓请求周期，就是指从http请求发起，到服务器处理结束，返回响应的整个过程。在这个过程中可能使用forward的方式跳转了多个jsp页面，在这些页面里你都可以使用这个变量。

如果把变量放到session里，就说明它的作用域是session，它的有效范围是当前会话。

所谓当前会话，就是指从用户打开浏览器开始，到用户关闭浏览器这中间的过程。这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session），而放到会话中的变量，就可以在当前会话的所有请求里使用。

如果把变量放到application里，就说明它的作用域是application，它的有效范围是整个应用。

整个应用是指从应用启动，到应用结束。我们没有说“从服务器启动，到服务器关闭”，是因为一个服务器可能部署多个应用，当然你关闭了服务器，就会把上面所有的应用都关闭了。

application作用域里的变量，它们的存活时间是最长的，如果不进行手工删除，它们就一直可以使用。

与上述三个不同的是，application里的变量可以被所有用户共用。如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值。这在其他scope中都是不会发生的，page, request, session都是完全隔离的，无论如何修改都不会影响其他人的数据。

 

 

 问题：page、request、session、application的作用范围？

  书中解答，此处只摘录重要语句：

  page：用户请求的当前页面；

  Request：用户请求访问的当前组件，以及和当前web组件共享同一用户请求的web组件。如：被请求的jsp页面和该页面用<include>指令包含的页面以及<forward>标记包含的其它jsp页面； 

  Session：同一个http会话中的web组件共享它；
  Application：整个web应用的所用web组件共享它。

 此处我举个例子说明

   一个网站MyWebSite，其包含7个jsp页面，分别为master.jsp、top.jsp、main.jsp、foot.jsp、login.jsp、success.jsp和news.jsp。master.jsp页面通过<include>指令包含top.jsp、main.jsp、foot.jsp三个页面,当用户通过login.jsp登录成功后，进入success.jsp页面然后通过此页面的<forward>标签跳转到master.jsp页面中。

    我们在success.jsp页面中加入如下代码（此处用到jstl标签） 

<c:set value="aaa" var="test1" scope=”page” />
<c:set value="aaa" var="test2" scope=”request” />
<c:set value="aaa" var="test3" scope=”session” />
<c:set value="aaa" var="test4" scope=”application” />

<jsp:forward page=”master.jsp”/ >这里一一说明

1.变量 test1 只在success.jsp内有效；
2.变量 test2  在success.jsp、master.jsp、top.jsp、main.jsp、foot.jsp中有效；
3.变量 test3 在7个页面中都有效(包括login.jsp和news.jsp)；
4.变量 test4 在整个网站，当前也就是7个页面中都有效(包括login.jsp和news.jsp)。

Test3和test4有效范围一样，有什么区别呢？

   其实区别蛮大的，我只说明一点，假如此时又有另一个用户访问master.jsp页面，那么test3相对于这个用户来说就无效，而test4却是有效的。或者当第一个登录的用户关闭浏览器后，再重新访问master.jsp时，test3就无效，而test4却有效。

