* linux 常用命令组合
1. 删除0字节文件
   + find . -type f -size 0 -exec rm -rf {} \;
   + find . type f -size 0 -delete
2. 查看进程，按内存从大到小排列
   + ps -e -o “%C : %p : %z : %a”|sort -k5 -nr
3. 按cpu利用率从大到小排列
   + ps -e -o “%C : %p : %z : %a”|sort -nr
4. 打印说cache里的URL
   + grep -r -a jpg /data/cache/* | strings | grep “http:” | awk -F’http:’ ‘{print “http:”$2;}’
5. 查看http的并发请求数及其TCP连接状态
   + netstat -n | awk ‘/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}’
6. sed在这个文里Root的一行，匹配Root一行，将no替换成yes。
   + sed -i ‘/Root/s/no/yes/’ /etc/ssh/sshd_config
7. 如何杀掉 mysql 进程
   + ps aux |grep mysql |grep -v grep |awk ‘{print $2}’ |xargs kill -9
   + killall -TERM mysqld
   + kill -9 `cat /usr/local/apache2/logs/httpd.pid`
8. 显示运行3级别开启的服务(从中了解到cut的用途，截取数据)
   + ls /etc/rc3.d/S* |cut -c 15-
9. 如何在编写SHELL显示多个信息，用EOF cat << EOF
   + +————————————————————–+
   + |  === Welcome to Tunoff services ===             |
   + +————————————————————–+
   + EOF
 
10. for的用法(如给mysql建软链接) cd /usr/local/mysql/bin
    + for i in *
    + do ln /usr/local/mysql/bin/$i /usr/bin/$i
    + done
11. 取IP地址
 
    + ifconfig eth0 |grep "inet addr:" |awk ‘{print \$2}'|cut -c 6-
    + ifconfig | grep ‘inet addr:'| grep -v '127.0.0.1' |cut -d: -f2 | awk ‘'{ print \$1}'
12. 内存的大小
    + free -m |grep "Mem" | awk ‘{print $2}’
13. 查看80端口的连接，并排序
    + netstat -an -t | grep ":80" | grep ESTABLISHED | awk ‘{printf “%s %s\n”,$5,$6}’ | sort
14. 查看Apache的并发请求数及其TCP连接状态
    + netstat -n | awk ‘/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}’
15. 统计一下服务器下面所有的jpg的文件的大小
    + find / -name *.jpg -exec wc -c {} \;|awk ‘{print \$1}’|awk ‘{a+=\$1}END{print a}’
16. CPU的数量
    + cat /proc/cpuinfo |grep -c processor
17. CPU负载
    + cat /proc/loadavg
18. CPU负载
    + mpstat 1 1
19. 内存空间
    + free
20. 磁盘空间
    + df -h
21. 如发现某个分区空间接近用尽，可以进入该分区的挂载点，用以下命令找出占用空间最多的文件或目录
    + du -cks * | sort -rn | head -n 10
22. 磁盘I/O负载
    + iostat -x 1 2
23. 网络负载
    + sar -n DEV
24. 网络错误
    + netstat -i
    + cat /proc/net/dev
25. 网络连接数目
    + netstat -an | grep -E “^(tcp)” | cut -c 68- | sort | uniq -c | sort -n
26. 进程总数
    + ps aux | wc -l
27. 查看进程树
    + ps aufx
28. 可运行进程数目
    + vmwtat 1 5
29. 检查DNS Server工作是否正常，这里以61.139.2.69为例
    + dig www.baidu.com @61.139.2.69
30. 检查当前登录的用户个数
    + who | wc -l
31. 日志查看、搜索
    + cat /var/log/rflogview/*errors
    + grep -i error /var/log/messages
    + grep -i fail /var/log/messages
    + tail -f -n 2000 /var/log/messages
32. 内核日志
    + dmesg
33. 时间
    + date
34. 已经打开的句柄数
    + lsof | wc -l
35. 网络抓包，直接输出摘要信息到文件。
    + tcpdump -c 10000 -i eth0 -n dst port 80 > /root/pkts
36. 然后检查IP的重复数 并从小到大排序 注意 “-t\ +0″ 中间是两个空格，less命令的用法。
    + less pkts | awk {‘printf \$3″\n”‘} | cut -d. -f 1-4 | sort | uniq -c | awk {‘printf $1″ “\$2″\n”‘} | sort -n -t\ +0
37. kudzu查看网卡型号
    + kudzu –probe –class=network
38. 删除各domain中的日志文件
    + find /home/lx7ly/Oracle/Middleware/user_projects/domains -mtime + 3 -name "*.log.*" -type f -exec rm {} \; 
39. 支付银行打标签
    + svn update /home/lx7ly/Oracle/Middleware/user_projects/app/ifmis3.0
    + svn update /home/lx7ly/Documents/codetag/01-pay
    + cp -Ru /home/lx7ly/Oracle/Middleware/user_projects/app/ifmis3.0/PAY /home/lx7ly/Documents/codetag/01-pay/V3_0_3_0/code
    + cp -Ru /home/lx7ly/Oracle/Middleware/user_projects/app/ifmis3.0/BANK /home/lx7ly/Documents/codetag/01-pay/V3_0_3_0/code
    + cp -Ru /home/lx7ly/Oracle/Middleware/user_projects/app/ifmis3.0/WebRoot/pay /home/lx7ly/Documents/codetag/01-pay/V3_0_3_0/code/WebRoot
    + cp -Ru /home/lx7ly/Oracle/Middleware/user_projects/app/ifmis3.0/WebRoot/bank /home/lx7ly/Documents/codetag/01-pay/V3_0_3_0/code/WebRoot
    + svn status /home/lx7ly/Documents/codetag/01-pay |grep -v '^\?' | tr '\?' ' '|sed 's/\ //' |xargs svn commit -m "";
40. svn 代码提交
  #+BEGIN_EXAMPLE
  svn status |grep '^\?' |tr '\?' ' '|sed 's/\ //g'|xargs svn add
  svn status |grep '^A' |tr 'A' ' '|sed 's/\ //g'|xargs svn commit -m "调帐编辑页面"
  #+END_EXAMPLE
41. find grep
  #+BEGIN_EXAMPLE
  查找目录下的所有文件中是否含有某个字符串 
  find .|xargs grep -ri "IBM" 
  查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名 
  find .|xargs grep -ri "IBM" -l 

  find . -type f | grep -P -r "[\x80-\xFF]" | cat | wc -l
  #+BEGIN_EXAMPLE
42. svn获取指定用户某个时间段日志信息
  #+BEGIN_EXAMPLE
  svn log --search zhaozhiwei -r {2014-11-04}:{2014-11-13} -v
  svn log /home/lx7ly/Oracle/Middleware/user_projects/app/ifmis_dev --search zhaozhiwei -r {2017-09-05}:{2017-09-07} --xml + /home/lx7ly/Documents/loginfo_`date "+%Y%m%d"`.xml
  #+BEGIN_EXAMPLE
43. 导出替换文件
  #+BEGIN_EXAMPLE
  #####根据svn提交记录导出
  --修改的所有文件
  svn log --search zhaozhiwei -r {2017-12-04T12:13}:{2017-12-5T13:14} -v |grep DL |sed 's/\ //g'|sed   's/\/DL\/product\/ifmis3.0\/3.0/\/home\/lx7ly\/Oracle\/Middleware\/user_projects\/app\/3.0/g'|sed 's/^A//'|sed 's/^M//' | xargs -i cp {} ~/Documents/th

  --替换的js
  svn log --search zhaozhiwei -r {2017-12-04T12:13}:{2017-12-5T13:14} -v |grep DL |grep .js|sed 's/\ //g'|sed   's/\/DL\/product\/ifmis3.0\/3.0/\/home\/lx7ly\/Oracle\/Middleware\/user_projects\/app\/3.0/g'|sed 's/^A//'|sed 's/^M//'| xargs -i cp {} ~/Documents/th
  --替换的class
  svn log --search zhaozhiwei -r {2017-12-04T12:13}:{2017-12-5T13:14} -v |grep DL |grep .java|sed 's/\ //g'|sed   's/\/DL\/product\/ifmis3.0\/3.0\/BDG\/src/\/home\/lx7ly\/Oracle\/Middleware\/user_projects\/app\/3.0\/WebRoot\/WEB-INF\/classes/g'|sed 's/^A//'|sed 's/^M//'|sed   's/.java/.class/'|xargs -i cp {} ~/Documents/th
  
  ##### 根据修改时间导出 5分钟内修改的文件
  find /home/lx7ly/Oracle/Middleware/user_projects/app/3.0/WebRoot -mmin -5 -type f -exec cp {} ~/Documents/th \;
  带路径打包:
  //根据提交时间打包 tar -c
  cd /home/lx7ly/Oracle/Middleware/user_projects/app/3.0/WebRoot && find . -mmin -60 -type f -exec tar -zcvf th.tar.gz {} \; && mv th.tar.gz ~/Documents/th
  //方式2： (项目下js与class目录文件相同, 俩部分同时打包) tar -r 根据目录追加打包文件全, 但是不能加-z参数,必须单独 gzip
  cd /home/lx7ly/Oracle/Middleware/user_projects/app/3.0/WebRoot && find . -type d -name "bdgreceive" -exec tar -rvf out.tar {} \; && gzip out.tar && mv out.tar.gz ~/Documents/th
  注意: find 根据文件匹配并压缩时候: find -type f -name "bdgrece*" -exec tar -cvf 只压缩匹配到的第一个文件
      如果是find -type d -name "bdgrece*" -exec tar -cvf 压缩匹配到其中一个目录及其下所有文件
      如果是find -type d -name "bdgrece*" -exec tar -rvf 压缩匹配到的所有目录及其下所有文件
  #+BEGIN_EXAMPLE
44. 删除汉字
  #+BEGIN_EXAMPLE
  vim: %s/\v[^\x00-\xff]+//g 
  sed: LANG=C sed -r "s/[\x81-\xFE][\x40-\xFE]//g" file
  #+BEGIN_EXAMPLE
45. cat合并多个文件
  #+BEGIN_EXAMPLE
  cat text_2009*.[0-2][0-9][0-5][0-9] +newfile
  #+BEGIN_EXAMPLE
46. 使用空间最多前10
  #+BEGIN_EXAMPLE
  du -s /usr/share/* | sort -nr | head -10

  #+BEGIN_EXAMPLE
47. 下载83 war包
  #+BEGIN_EXAMPLE
  scp   test@192.168.3.82:/weblogic/Oracle/Middleware/user_projects/domains/fasp_domain18003/app/fasp2.war /home/lx7ly/Oracle/Middleware/user_projects/app

  jar -uvf fasp2.war WEB-INF/classes/datasource.xml
  jar -uvf fportal.war WEB-INF/classes/resources/datasource.xml
   #+BEGIN_EXAMPLE
48. ##### 内存占用最多服务
  #+BEGIN_EXAMPLE
  ps -aux | sort -k4nr | head -10
  #+BEGIN_EXAMPLE
49. 查找某个字段注册信息
  #+BEGIN_EXAMPLE
  find . -type f -exec grep "'BDGLEVEL'" -n {} \; //还需要过滤
  find . -type d -name "*fasp"|xargs ls -al|grep '^-'|awk '{print $9}'|xargs grep "bdglevel"//不能访问全路径
  find . -type d -name "business" -exec find {} -type f \;|xargs grep "1500" //可用 * 查找这些目录下文件中带有1500的
  #+END_EXAMPLE
50. 除了本机正在使用中的最新内核，删除所有旧内核:
  #+BEGIN_EXAMPLE
  sudo apt-get remove --purge $(dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d')
  #+END_EXAMPLE
51. 假如要转换一个文件夹下所有的文件编码，
  #+BEGIN_EXAMPLE
    # 源目录 src 复制目录结构到utf8目录
    find src -type d -exec mkdir -p utf8/{} \;

    # 把源目录中的PHP文件从ISO-8859-1编码转换为UTF-8编码，输出路径为utf8目录下的对应目录
    find src -name "*.php" -exec iconv -f ISO-8859-1 -t UTF-8 {} -o utf8/{} \;

    #如果只转换一个文件的编码，可以这样：
    iconv -f ISO-8859-1 -t UTF-8 test.php -o test.php.utf8
    enca -L zh_CN -x utf-8 bdgrece.txt
  #+END_EXAMPLE
52. 导出odt文件，发送到开发设计文档目录中
 #+BEGIN_SRC 
find /home/lx7ly/Documents/notes -name "*.odt" -exec mv {} /home/lx7ly/workspace/BDG-指标管理/03分析设计/02系统设计/V3_0_3_0 \; 
 #+END_SRC
53. 下载日志文件
    + scp -P 22 test@192.168.3.72:/weblogic/Oracle/Middleware/user_projects/domains/pay_domain28004/bin/28004.out /tmp
    + 密码 test
54. 批量执行命令及awk使用
    + seq 10|awk '/[0-9]/ {print}'
    + for i in {1..10};do echo $i; done |awk '/[0-9]/ {print "hello"}'
    + while true; do date; sleep 1; done
    + watch -n 1 date
55. 统计空行
    + awk '/^$/ {++x} END {print x}' 1.txt 
