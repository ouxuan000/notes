默认账户密码root
create database mydata；

use mydata；//以后都在这个目录下

*****注意后面的分号

create table //一定注意前面必须写到过use mydata 表示这个表在mydata数据库中

use mydata;

create table dept
(
deptno int primary key,  //(在oracle中是number类型 表示主键)
dname varchar(14),   //在oracle下面是varchar2类型
loc varchar（13）
）；

另外新建一个表
create table emp 
（
empno int primary key,
ename varchar(10),
job varchar(10),
mgr int,
hiredate datetime,
sal double,
comm double,
deptno int,
constraint foreign key(empno) references dept(deptno)--加外键
);

已经建好的表添加约束
ALTER TABLE reply add constraint foreign key(topicid) references topic(id);

\.执行一个sql脚本文件

show databases;//看有多少个数据库

show tables;//看mydata下面有多少个表

desc dept;  //discription  查看dept这个表的结构

insert into dept values (10,'A','A');//插入内容

insert into dept values (20,'B','B');//插入内容

insert into dept values (30,'C','C');//插入内容

insert into dept values (40,'D','D');//插入内容

commit;//提交

*******这里需要看oracle，已经讲过，mysql中不讲了delete  from********

******数据库与数据库中影响写程序的区别主要有：1、数据类型（查手册 数据型 文本型 日期类型）
2、分页类型（oracle中是。。；mysql中比较简单
select * from dept order by dept desc limit 3,2;//从这个表中第三行往后取俩行降序排列）

3、数据库自动递增字段
  oracle中创建自动递增字段 需要创建一个序列；
  mysql中 
	create table article
	(
	id int primary key auto_increment,
	title varchar(255)
	);

	insert into article values(null,'a');
	select * from article;//查看效果
	
	insert into article values(null,'b');
	select * from article;	********

4、show create table article;//能查到字符编码（马士兵bbs论坛06）

×××××××××××××××××××××××unbuntu下使用apt-get安装的mysql××××××××××

5、sudo netstat -tap | grep mysql 检测mysql服务是否在运行（显示：tcp 0 0 localhost.localdomain:mysql *:* LISTEN - ）

6、重启sudo /etc/init.d/mysql restart

7、配置 MySQL 的管理员密码 
sudo mysqladmin -u root password newpassword

8、手动启动mysql服务命令
sudo /etc/init.d/mysql start
[sudo /etc/init.d/mysql stop关闭mysql服务]
××××××××××××××××××××××××××××××××××××××××××××××××

9、select now();--显示系统当前时间
	oracle中使用 select sysdate from dual;

日期转换成字符串：select date_format(now(),'%y-%m-%d %h:%i:%s');

--插入日期类型insert into emp values (9999,'test','clerk',7369,'1990-08-07 09:48:32',8000,80,1s0);

10、source ×××.sql执行sql脚本

11、mysql修改配置文件中/etc/mysql/my.cnf里的client字符编码位utf8后，数据库名称就不能写大写字母了，原来的大写字母数据库也不能访问到。

12、汉字排序select * from t_user order by convert(username using gbk); //转换成gbk编码，gbk支持汉字一级汉字首字母排序

13、 show create table student;显示建表语句

14、查询默认隔离级别 select @@tx_isolation

15、where后面的过滤条件前后顺序对查询效率有没有影响？（面试题）
	粒度大的放在前面，会提高一定的效率。 何为粒度大（如果某个条件可以过滤掉很多的数据，这个条件就是粒度大）

16、mysql导出数据库
	mysqldump -u 用户名 -p 数据库名 > 导出的文件名
	mysqldump -u root -p xxx > xxxxxx.sql

17、mysql导出数据库表
	mysqldump -u 用户名 -p 数据库名 表名> 导出的文件名
	mysqldump -u xxx -p xxx xxxxx> xxxxxxx.sql

18、可以使用limit限制update跟新相同条件数据时候的更新的条数（leaveorbackmanagersys）
basedao:update applyinfo set id=?,stuname=?,starttime=?,endtime=?,leavedays=?,phone=?,reason=?,status=?,teacher_approval=?,teacher_options=?,dept_secretary_approval=?,dept_secretary_options=?,dept_head_approval=?,dept_head_options=? where id = ? order by starttime desc limit 1

19、mysql中文乱码解决：
	http://www.360doc.comcontent/14/0514/09/2560742_377431800.shtml
只需要在mysqld下面加入character-set-server=utf8即可，其他网上方法都好坑
重启mysql服务使用sudo /etc/init.d/mysql restart
查看编码show variables like 'character%';

20、×××××××××××××××××××建立自己的记账软件××××××××××××××××××
注意：存储过程，触发器，定时器都是在数据库范围内有效
mysql创建存储过程：
	create procedure 名字()
		begin
			update testtiming set money = money + 1000;\\
			--钱在原来基础上加1000
		end;
调用存储过程：call 名字();

mysql创建触发器：
	expenses表：
	插入：
	mysql> create trigger expenses_data_insert after insert on expenses for each row begin update user set balance = balance - new.money where id = new.userId; end&&
	Query OK, 0 rows affected (0.02 sec)

	mysql> delimiter ;


	修改：
	mysql> delimiter &&
	mysql> create trigger expenses_data_update after update on expenses for each row begin update user set balance = balance - new.money where id = new.userId; end&&
	Query OK, 0 rows affected (0.01 sec)

	mysql> delimiter ;


	删除：
	mysql> delimiter &&
	mysql> create trigger expenses_data_delete after delete on expenses
	    -> for each row 
	    -> begin
	    -> update user set balance = balance + old.money where id = old.userId; end &&
	Query OK, 0 rows affected (0.01 sec)

	mysql> delimiter ;

mysql创建定时器：

	查看event是否开启
	show variables like 'event_scheduler';
	
	思考：variables里面的东西貌似都可以在my.cnf文件中设置

	开启事件计划：
	set global event_scheduler = 1;

	--每10秒执行test()存储过程
	mysql> delimiter &&
	create event testtiming
	on schedule every 10 second
	on completion preserve enable
	do
	begin
	call test();
	end &&
	mysql> delimiter ;

关闭定时器：
alter event testtiming on completion preserve disable;

查看所有定时器：
show events;

配置mysql服务自启动：

配置mysql计划任务默认启动：
在my.cnf [mysqld]下面添加event_scheduler=on


查看日期
select curdate();
查看日期时间:
select now();

每月十二号：
select date_add(date_sub(curdate(),interval day(curdate(),day)),interval 12 day);

创建发工资计划任务
mysql> delimiter &&
mysql> create event payday
    -> on schedule every 1 month starts date_add(date_sub(curdate(),interval day(curdate()) day),interval 12 day)
    -> on completion preserve enable
    -> do
    -> begin
    -> update user set balance = balance + monthlyprofit * 80 * 80 /10000 where id = 1; end &&
Query OK, 0 rows affected (0.00 sec)

mysql> delimiter ;
