  #+BEGIN_EXAMPLE
  select * 
  from FASP_T_PUBAGENCYGL t 
  start with exists (select 1 
  from (SELECT * 
  FROM FASP_T_PUBAGENCYGL 
  WHERE GUID IN 
  ((select l.guid 
  from fasp_t_busrumprulelink l 
  where l.batchguid = 
  'BBEA8FAC43254C58B7CFCCD19343D0F1'))) t2 
  where t2.guid = t.guid) 
  connect by t.guid = prior t.superguid;
  #+END_EXAMPLE 
* 树状结构展现
  #+BEGIN_EXAMPLE
  oracle中的select语句可以用START WITH…CONNECT BY PRIOR子句实现递归查询，connect by 是结构化查询中用到的，其基本语法是： 
  select … from 
  where 
  start with 
  connect by ;
  #+END_EXAMPLE 
：过滤条件，用于对返回的所有记录进行过滤。 
：查询结果重起始根结点的限定条件。 
：连接条件 
* 数据库表结构如下：
  #+BEGIN_EXAMPLE
  create table t2( 
  root_id number, 
  id number, 
  name varchar(5), 
  description varchar(10) 
  ); 
  insert into t2(root_id,id,name,description) values(0,1,'a','aaa'); 
  insert into t2(root_id,id,name,description) values(1,2,'a1','aaa1'); 
  insert into t2(root_id,id,name,description) values(1,3,'a2','aaa2'); 
  insert into t2(root_id,id,name,description) values(0,4,'b','bbb'); 
  insert into t2(root_id,id,name,description) values(4,5,'b1','bbb1'); 
  insert into t2(root_id,id,name,description) values(4,6,'b2','bbb2'); 
  #+END_EXAMPLE
* 获取完整树：
  #+BEGIN_EXAMPLE 
  select * from t2; 
  select * from t2 start with root_id = 0 connect by prior id = root_id; 
  #+END_EXAMPLE
* 获取特定子树： 
  #+BEGIN_EXAMPLE
  select * from t2 start with id = 1 connect by prior id = root_id; 
  如果connect by prior中的prior被省略，则查询将不进行深层递归。 
  如： 
  select * from t2 start with root_id = 0 connect by id = root_id; 
  select * from t2 start with id = 1 connect by id = root_id; 
  #+END_EXAMPLE
* 总结：
  + start with id= 是定义起始节点（种子），可以是id也可以是root_id,定义为root_Id查询该节点下所有的树结构，定义为id（子节点）则查询指定的树 
  + connect by prior ：prior的含义为先前，前一条记录。prior id=root_id 也就是前一条记录 
  + 的id等于当前记录的root_id(父id) 
  +可以向下或者向上查找。。。。 
  +level字段为oracle特有的层级字段，可以通过level字段查询指定的层级 
  +select root_id,id,name,level from t2 where level=1 
  +start with root_id = 0 
  +connect by prior id = root_id;
