* 指标系统中操作
** 接收
   + 预算数据接收到指标系统临时表中
** 生成
   + 普通生成
     + 根据选中数据从上到下多级生成
   + 挂接
     + 选中来源挂接现有数据
   + 汇总生成
     + 选中数据当作最底层指标走多级导入逻辑
     + 需要依赖多级导入的配置
** 撤销生成
* 预算系统中调用接口生成指标
** 提供生成和取消生成接口
*** 生成
    + 接收数据放入到临时表中(原始数据)
    + 原始数据根据指标要素对照进行转换
    + 生成指标数据，走多级导入的逻辑, 使用的单据根据预算传入生成单据来区分
    + 多级生成是否汇总依赖多级导入配置
    + 导入后上级指标全部新增并终审，最底层指标如果配置了wfstatus就终审，没有就走工作流
    + 传入数据需要先校验是否在指标环境并且处于未生成指标状态
    + 预算数据必须传入一些必要值
      | 字段名称         | 编码       | 类型 | 长度 | 备注                                                                        |
      |------------------+------------+------+------+-----------------------------------------------------------------------------|
      | 预算数据唯一标识 | TRANSGUID  | 文本 |   50 |                                                                             |
      | 是否负指标       | sffzb      |      |      | 可选                                                                          |
      | 生成级次         | BUSSTYPE   | 文本 |   10 | 1.单位指标 2.处室指标, 指定生成到的级次                                     |
      | 调整类型         | ADJUSTTPYE | 文本 |   10 | 1. 追加 2.追减(追减金额必须为负数,必须传入可以找到原正向数据的标识FROMGUID) |
*** 撤销
    + 先校验能否取消(当前数据是否已经被下级所使用)
    + 可取消时候根据批次撤销生产痕迹
    + 清除临时表中数据
*** 成都需求dbctrl
    + 生成和撤销逻辑基本一致只是方向不同
    + 预算数据中如果需要控制的必须有isdbctrl要素, 要素为1时数据走控制逻辑
    + 记账时通过预算传入transguid作为业务唯一id
    + 现场需要配置交易令, 交易令编码固定
      + bgt2bdg001: 追减和直接通过接口产生额度时使用该交易令
      + bgt2bdg002: 追加时使用
*** api
    #+BEGIN_SRC java
        /**
        * 对外提供预算转指标接口
        */
        public interface IBgtToBdg
        {

            /**
            * 预算转指标
            * @param userId
            * @param province
            * @param year
            * @param data 传入数据list中必须是map或者map的子类
            * @return 返回值为map, 包含成功和失败的list{"0":[{"":""},{}...], "1":[{"":""},{}]} , 0是成功， 1是失败
            * @throws Exception
            */
            Map create(String userId, String province, String year, List<? extends Map> data);

            /**
            * 撤销预算转指标
            * @param userId
            * @param province
            * @param year
            * @param data 传入数据list中必须是map或者map的子类
            * @return 返回值为map, 包含成功和失败的list{"0":[{"":""},{}...], "1":[{"":""},{}]} , 0是成功， 1是失败
            * @throws Exception
            */
            Map cancelCreate(String userId, String province, String year, List<? extends Map> data);

            /**
            * 预算数据直接生成额度
            * @param userId
            * @param province
            * @param year
            * @param data
            * @return
            */
            Map dbCtrl(String userId, String province, String year, List<? extends Map> data);

            /**
            * 预算数据撤销生成额度
            * @param userId
            * @param province
            * @param year
            * @param data
            * @return
            */
            Map cancelDbCtrl(String userId, String province, String year, List<? extends Map> data);
        }
    #+END_SRC
