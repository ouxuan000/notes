* 用户录入
  使用用用户录入的文号作为当次操作的文号
* 文号规则生成
  + 前台生成
    + 文号规则配置前台生成，前台界面配置出文号bgtdocno字段,进入页面后会展示当前文号,并且框架提供接口,改文号目前只是作为查询, 不实际使用下次进入页面仍然是该文号
    #+BEGIN_SRC javascript
        if(Ext.lt.bdg.operatepage === 'modPage' || Ext.lt.bdg.operatepage === 'modCountryPage'){
            return;
        }
        var data = Ext.lt.RCP.asyncall(Ext.lt.bdg.common.serverid, "getbgtdocno", Ext.lt.bdg.common.vchtypeid);
        maineditform.synchEditform({bgtdocno: data});
    #+END_SRC
  + 后台生成
    + 纯后台生成, 如果数据中没有带有文号就会生成一个文号， 然后将该文号同步给所有的主单明细
    #+BEGIN_SRC java
        //文号特殊处理(类型2), 每次操作一个文号, 第一条数据没有guid就当作新增处理
        if (billList.size() > 0 && billList.get(0).get("guid") == null) {
            String bgtdocnotype = (String) getBusinessVoucherDTO(parameter.getVchTypeId()).get("bgtdocnotype");
            if ("2".equals(bgtdocnotype)) {
                String uuid = UUID.randomUUID().toString().replace("-", "");
                HashMap<String, String> map1 = new HashMap<String, String>(1);
                map1.put("guid", uuid);
                getSerialRule().getSerialNo(parameter.getVchTypeId(), "bgtdocno",  map1, false);
                //如果有文号就调用下框架的文号逻辑 跳下号
                if(BdgUtil.isNull(String.valueOf(billList.get(0).get("bgtdocno")))){
                    //没有文号 就通过框架接口获取一个文号
                    for (Map map : billList) {
                        map.put("bgtdocno", map1.get("bgtdocno"));
                        List<HashMap> sublist = (List<HashMap>) map.get("sublist");
                        for(HashMap m:sublist){
                            m.put("bgtdocno",map1.get("bgtdocno"));
                        }
                    }
                }
            }

        }
    #+END_SRC
* 文号模板
+ 编号规则定义页面增加文号规则
+ 在文号模板页面对各个单据配置文号规则
+ 文号规则需要指定使用的处室, 编辑区点击规则值集时会根据数据权限以及当前选中的处室过滤可用的模板
  + 数据权限过滤
    #+BEGIN_SRC java
          if (submenu != null && !submenu.equals("")) {
              drfilter = dataRightBusinessService.getDataRightSQLByelementCode("t1", submenu, "FININTORGGUID", BdgUtil.getBdgMainTable());

              //处理成都把资金归口处室当业务处室使用问题
              if (BdgUtil.isNull(drfilter)) {
                  drfilter = (dataRightBusinessService.getDataRightSQLByelementCode("t1", submenu, "DEPARTMENTDIVISION", BdgUtil.getBdgMainTable()));
              }
          }
          if (drfilter != null && !"".equals(drfilter)) {
              sql += " and (" + drfilter.replaceFirst("(?i)guid", "department") + ")";
          } 
    #+END_SRC
  + 前台选中处室过滤, 需要再单据定义主编辑区文号字段加入过滤条件 department='#FININTORGGUID', 就会根据处室过滤文号模板, 或者直接再数据库中插入{"fromsource":0,uifilter:'department= \'#finintorgguid\''}
    #+BEGIN_SRC javascript
    {
            bgtdocno: {
                asyncloaddata: function (resp) {
                    var filtersql;
                    if(maineditform.getCol('bgtdocno')){
                        var bgtdocnoColConfig = maineditform.getCol('bgtdocno')._cfg.config;
                        if(bgtdocnoColConfig.uifilter){
                          filtersql = bgtdocnoColConfig.uifilter.replace(/\‘/g,'\'');//数据过滤-字段级（UI界面设置）;
                        }
                    }
                    if (filtersql != null && filtersql.indexOf("#") != -1) {
                        var varstr = filtersql.match(/#[A-Za-z0-9.]+/g);
                        if (varstr) {
                            for (var i = 0; i < varstr.length; i++) {
                                var repStr = varstr[i].replace(/#/g, "");

                                //以主编辑区有值为准
                                var _drs = {};
                                if (typeof editform != "undefined") {
                                    if(typeof editform.getEditFormValues()[repStr.toLowerCase()] != 'undefined'){
                                        _drs = editform.getEditFormValues();
                                    }
                                }
                                if (typeof maineditform != "undefined") {
                                    if(typeof maineditform.getEditFormValues()[repStr.toLowerCase()] != 'undefined'){
                                        _drs = maineditform.getEditFormValues();
                                    }
                                }
                                (typeof(repStr) != "undefined") ? repStr: null;
                                var repStrr = eval('(typeof(' + repStr + ')=="string" || typeof(' + repStr + ')=="boolean" || typeof(' + repStr + ')=="number")?' + repStr + ':_drs["' + repStr.toLowerCase() + '"]');
                                var strTo = filtersql.indexOf(varstr[i]);
                                var strStart = filtersql.substring(0, strTo);
                                var strEnd = filtersql.substring(strTo + varstr[i].length);
                                filtersql = strStart + repStrr + strEnd;
                                if(typeof repStrr != 'undefined' && repStrr != ''){
                                    param.filter = filtersql;
                                }else{
                                    delete param.filter;
                                }
                                docNoData =
                                    Ext.lt.RCP.asyncall(Ext.lt.bdg.common.serverid, "showBdgDocNoQTreeService", param);
                            }
                        }
                    }else{
                        docNoData =
                            Ext.lt.RCP.asyncall(Ext.lt.bdg.common.serverid, "showBdgDocNoQTreeService", param);
                    }
                    resp.data = docNoData;
                }
            }
        }
    #+END_SRC
* 上级引入
* 文号括号规则
  + 根据现场配置括号生成规则，生成对应的括号形式
    #+BEGIN_SRC javascript
    /**
    * （）{}【】《》（）｛｝《》【】(){}<>[]（）｛｝＜＞ ==>［］
    * @param str
    */
    function standardBgtdocno(str) {
        if(Ext.lt.bdg.common.bgtdocnobrackets != ''){
            return str.trim()
                .replace(/\s/g,"")
                .replace(/[\（\{\【\《\（\｛\《\【\(\{\<\[\（\｛\＜\［]/g, (Ext.lt.bdg.common.bgtdocnobrackets.left != '')? Ext.lt.bdg.common.bgtdocnobrackets.left:'〔')
                .replace(/[\）\}\】\》\）\｝\》\】\)\}\>\]\）\｝\＞\］]/g, (Ext.lt.bdg.common.bgtdocnobrackets.right != '')? Ext.lt.bdg.common.bgtdocnobrackets.right:'〕');
        }else{
            return str.trim().replace(/\s/g,"").replace(/[\（\{\【\《\（\｛\《\【\(\{\<\[\（\｛\＜\［]/g, '〔')
                .replace(/[\）\}\】\》\）\｝\》\】\)\}\>\]\）\｝\＞\］]/g, '〕');
        }
    }
    #+END_SRC
  + 配置脚本
    #+BEGIN_EXAMPLE
    insert into pay_t_systemset (CODE, PARAMNAME, PARAMOPTION, VALUE, REMARK, ISUSED, DATATYPE, DISPENSABLE, EDITABLE, DATALENGTH, EDITMASK, SYSTEMTYPE, EDITTYPE, ELEMENTCODE, APPID)
  values ('BGTDOCNOBRACKETS', '杭州文号设置', '设置成什么系统就会转成什么', '{"left":"〔","right":"〕"}', null, 1, null, 1, 1, 10, null, null, 1, null, 'bdg');
    #+END_EXAMPLE
